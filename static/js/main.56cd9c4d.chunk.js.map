{"version":3,"sources":["context/MovieContext.js","components/Header/index.js","components/LoadingView/index.js","components/TrendingNow/index.js","components/Footer/index.js","components/Originals/index.js","components/TopRated/index.js","components/Home/index.js","components/Login/index.js","components/Account/index.js","components/PopularMovies/index.js","components/Popular/index.js","components/MovieItem/index.js","components/MovieItemDetails/index.js","components/SearchItems/index.js","components/Search/index.js","components/ProtectedRoute/index.js","components/NotFound/index.js","App.js","index.js"],"names":["CartContext","React","createContext","username","password","closeNavBar","triggerCloseNavBar","triggerChangeUsername","triggerChangePassword","triggerLogout","searchInput","triggerSearchChange","Header","state","isMenu","this","MovieContext","Consumer","value","cartList","console","log","clickToClose","setState","prevState","className","testid","to","src","alt","type","size","color","onClick","Component","withRouter","LoadingView","height","width","apiConstants","TrendingNow","apiStatus","allTrendingVideos","getAllVideos","a","jwtToken","Cookies","get","options","method","headers","Authorization","fetch","response","ok","json","data","updatedVideosList","results","map","each","id","backdropPath","backdrop_path","overview","posterPath","poster_path","title","renderMovieItem","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","renderSuccessView","getResult","Footer","Originals","allTrendingItemVideos","getOriginalVideos","TopRated","allTopRatedItemVideos","getTopRatedItemVideos","Home","homeHeaderItem","Math","floor","random","length","backgroundImage","titleOfHeader","overviewOfHeader","style","backgroundSize","backgroundRepeat","Login","showSubmitError","errorMsg","onChangeUsername","event","onChangePassword","onSubmitSuccess","history","props","set","expires","replace","onSubmitFailure","submitNetflixForm","preventDefault","userDetails","body","JSON","stringify","jwt_token","error_msg","undefined","onSubmit","htmlFor","onChange","placeholder","Account","hiddenPassword","repeat","PopularMovies","allPopularVideos","getPopularItemVideos","overView","Popular","MovieItem","movieItemDetails","similarMovieItems","getFormattedData","adult","budget","genres","releaseDate","release_date","runtime","rating","vote_average","count","vote_count","similar_movies","spokenLanguage","spoken_languages","getMovieItemDetails","match","params","url","movie_details","slice","changeNewMovieDetails","dateEnd","hoursString","minutesString","dateString","Date","day","getDay","toString","endsWith","getFullYear","name","english_name","toLocaleString","month","target","MovieItemDetails","SearchItems","allSearchResults","getSearchElementVideos","changeSearchInput","onClickInput","key","searchElements","onKeyDown","Search","ProtectedRoute","NotFound","App","remove","Provider","exact","path","component","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.56cd9c4d.chunk.js","sourcesContent":["import React from 'react'\n\nconst CartContext = React.createContext({\n  username: '',\n  password: '',\n  closeNavBar: false,\n  triggerCloseNavBar: () => {},\n  triggerChangeUsername: () => {},\n  triggerChangePassword: () => {},\n  triggerLogout: () => {},\n  searchInput: '',\n  triggerSearchChange: () => {},\n})\n\nexport default CartContext\n","import {Component} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport {HiOutlineSearch} from 'react-icons/hi'\nimport {MdCancel} from 'react-icons/md'\nimport {CgPlayList} from 'react-icons/cg'\n\nimport MovieContext from '../../context/MovieContext'\n\nimport './index.css'\n\nclass Header extends Component {\n  state = {isMenu: false}\n\n  render() {\n    const {isMenu} = this.state\n\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {cartList} = value\n          console.log('Header', cartList)\n\n          const clickToClose = () => {\n            this.setState(prevState => ({isMenu: !prevState.isMenu}))\n          }\n\n          return (\n            <nav className=\"nav-header\" testid=\"header\">\n              <div className=\"nav-content\">\n                <div className=\"nav-bar-large-container\">\n                  <Link to=\"/home\">\n                    <img\n                      className=\"website-logo\"\n                      src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650191862/Mini%20Project%20Netflix%20Clone/MoviesIcon_snclt2.png\"\n                      alt=\"website logo\"\n                    />\n                  </Link>\n\n                  <ul className=\"nav-menu\">\n                    <Link to=\"/\" className=\"nav-link\">\n                      <li className=\"nav-menu-item\">Home</li>\n                    </Link>\n\n                    <Link to=\"/popular\" className=\"nav-link\">\n                      <li className=\"nav-menu-item\">Popular</li>\n                    </Link>\n                  </ul>\n\n                  <ul className=\"nav-menu-profile\">\n                    <Link to=\"/search\" className=\"nav-link\">\n                      <li className=\"nav-menu-item\">\n                        <button\n                          type=\"button\"\n                          testid=\"searchButton\"\n                          className=\"search-button\"\n                        >\n                          <HiOutlineSearch size={25} color=\"white\" />\n                        </button>\n                      </li>\n                    </Link>\n                    <Link to=\"/account\" className=\"nav-link\">\n                      <li className=\"nav-menu-item\">\n                        <img\n                          src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650194938/Mini%20Project%20Netflix%20Clone/Avatar_ayfkv8.png\"\n                          alt=\"profile\"\n                          className=\"profile\"\n                        />\n                      </li>\n                    </Link>\n                    <ul className=\"nav-menu-mobile\">\n                      <Link to=\"/search\" className=\"nav-link\">\n                        <li className=\"nav-menu-item-mobile\">\n                          <button\n                            type=\"button\"\n                            testid=\"searchButton\"\n                            className=\"search-button\"\n                          >\n                            <HiOutlineSearch size={25} color=\"white\" />\n                          </button>\n                        </li>\n                      </Link>\n                      <li className=\"nav-menu-item-mobile\">\n                        <button\n                          type=\"button\"\n                          onClick={clickToClose}\n                          className=\"nav-button\"\n                        >\n                          <CgPlayList size={25} color=\"white\" />\n                        </button>\n                      </li>\n                    </ul>\n                  </ul>\n                </div>\n              </div>\n\n              {isMenu ? (\n                <ul className=\"nav-menu-mobile\">\n                  <ul className=\"nav-menu-list-mobile\">\n                    <Link to=\"/\" className=\"nav-link\">\n                      <li className=\"nav-menu-item-mobile\">Home</li>\n                    </Link>\n                    <Link to=\"/popular\" className=\"nav-link\">\n                      <li className=\"nav-menu-item-mobile\">Popular</li>\n                    </Link>\n                    <Link to=\"/account\" className=\"nav-link\">\n                      <li className=\"nav-menu-item-mobile\">Account</li>\n                    </Link>\n\n                    <li className=\"nav-menu-item-mobile\">\n                      <button\n                        type=\"button\"\n                        onClick={clickToClose}\n                        className=\"nav-button\"\n                      >\n                        <MdCancel size={25} color=\"white\" />\n                      </button>\n                    </li>\n                    {/* Add close button and change the state of the object so that */}\n                  </ul>\n                </ul>\n              ) : null}\n            </nav>\n          )\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default withRouter(Header)\n","import Loader from 'react-loader-spinner'\n\nconst LoadingView = () => (\n  <div className=\"loader-container\" testid=\"loader\">\n    <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n  </div>\n)\nexport default LoadingView\n","import {Component} from 'react'\n\nimport Slider from 'react-slick'\nimport {Link} from 'react-router-dom'\n\nimport Cookies from 'js-cookie'\nimport LoadingView from '../LoadingView'\n\nimport MovieContext from '../../context/MovieContext'\n\nimport './index.css'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass TrendingNow extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    allTrendingVideos: [],\n  }\n\n  componentDidMount() {\n    this.getAllVideos()\n  }\n\n  getAllVideos = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n\n    const url = 'https://apis.ccbp.in/movies-app/trending-movies'\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n\n      const updatedVideosList = data.results.map(each => ({\n        id: each.id,\n        backdropPath: each.backdrop_path,\n        overview: each.overview,\n        posterPath: each.poster_path,\n        title: each.title,\n      }))\n\n      this.setState({\n        apiStatus: apiConstants.success,\n        allTrendingVideos: updatedVideosList,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from trending', {username})\n\n          const renderLoader = () => <LoadingView />\n\n          const renderSuccessView = () => {\n            const {allTrendingVideos} = this.state\n\n            const settings = {\n              dots: false,\n              infinite: false,\n              speed: 500,\n              slidesToShow: 4,\n              slidesToScroll: 1,\n              responsive: [\n                {\n                  breakpoint: 1024,\n                  settings: {\n                    slidesToShow: 4,\n                    slidesToScroll: 1,\n                  },\n                },\n                {\n                  breakpoint: 600,\n                  settings: {\n                    slidesToShow: 3,\n                    slidesToScroll: 1,\n                  },\n                },\n                {\n                  breakpoint: 480,\n                  settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 1,\n                  },\n                },\n              ],\n            }\n\n            return (\n              <ul>\n                <Slider {...settings} className=\"slick-container\">\n                  {allTrendingVideos.map(each => (\n                    <div className=\"slick-item\" key={each.id}>\n                      <li key={each.id}>\n                        <Link to={`/movies/${each.id}`} key={each.id}>\n                          <img\n                            src={each.posterPath}\n                            alt={each.title}\n                            className=\"logo-image\"\n                          />\n                        </Link>\n                      </li>\n                    </div>\n                  ))}\n                </Slider>\n              </ul>\n            )\n          }\n\n          const renderMovieItem = () => {\n            this.getAllVideos()\n          }\n\n          const renderFailureView = () => (\n            <div className=\"failure-view-container\">\n              <img\n                alt=\"failure view\"\n                src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650297174/Mini%20Project%20Netflix%20Clone/Background-Complete_t8c6zl.png\"\n                className=\"failure-image\"\n              />\n              <p className=\"search-content\">\n                Something went wrong. Please try again\n              </p>\n\n              <button\n                type=\"button\"\n                className=\"try-again-button\"\n                onClick={renderMovieItem}\n              >\n                Try again\n              </button>\n            </div>\n          )\n\n          const getResult = () => {\n            const {apiStatus} = this.state\n            switch (apiStatus) {\n              case apiConstants.success:\n                return renderSuccessView()\n              case apiConstants.failure:\n                return renderFailureView()\n              case apiConstants.inProgress:\n                return renderLoader()\n              default:\n                return null\n            }\n          }\n\n          return <div testid=\"trending\">{getResult()}</div>\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default TrendingNow\n","import {FaGoogle, FaTwitter, FaYoutube, FaInstagram} from 'react-icons/fa'\nimport MovieContext from '../../context/MovieContext'\n\nimport './index.css'\n\nconst Footer = () => (\n  <MovieContext.Consumer>\n    {value => {\n      const {username} = value\n      console.log(username)\n\n      return (\n        <div className=\"footer-container\">\n          <div>\n            <FaGoogle size={30} className=\"footer-icon\" />\n            <FaTwitter size={30} className=\"footer-icon\" />\n            <FaYoutube size={30} className=\"footer-icon\" />\n            <FaInstagram size={30} className=\"footer-icon\" />\n          </div>\n          <p className=\"contact-heading\">Contact us</p>\n        </div>\n      )\n    }}\n  </MovieContext.Consumer>\n)\nexport default Footer\n","import {Component} from 'react'\n\nimport Slider from 'react-slick'\nimport {Link} from 'react-router-dom'\n\nimport Cookies from 'js-cookie'\nimport LoadingView from '../LoadingView'\n\nimport MovieContext from '../../context/MovieContext'\n\nimport './index.css'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass Originals extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    allTrendingItemVideos: [],\n  }\n\n  componentDidMount() {\n    this.getOriginalVideos()\n  }\n\n  getOriginalVideos = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n\n    const url = 'https://apis.ccbp.in/movies-app/originals'\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n      console.log(data)\n\n      const updatedVideosList = data.results.map(each => ({\n        id: each.id,\n        backdropPath: each.backdrop_path,\n        overview: each.overview,\n        posterPath: each.poster_path,\n        title: each.title,\n      }))\n\n      this.setState({\n        apiStatus: apiConstants.success,\n        allTrendingItemVideos: updatedVideosList,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from originals', {username})\n\n          const renderLoader = () => <LoadingView />\n\n          const renderSuccessView = () => {\n            const {allTrendingItemVideos} = this.state\n\n            const settings = {\n              dots: false,\n              infinite: false,\n              speed: 500,\n              slidesToShow: 4,\n              slidesToScroll: 1,\n              responsive: [\n                {\n                  breakpoint: 1024,\n                  settings: {\n                    slidesToShow: 4,\n                    slidesToScroll: 1,\n                  },\n                },\n                {\n                  breakpoint: 600,\n                  settings: {\n                    slidesToShow: 3,\n                    slidesToScroll: 1,\n                  },\n                },\n                {\n                  breakpoint: 480,\n                  settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 1,\n                  },\n                },\n              ],\n            }\n\n            return (\n              <ul>\n                <Slider {...settings} className=\"slick-container\">\n                  {allTrendingItemVideos.map(each => (\n                    <div className=\"slick-item\" key={each.id}>\n                      <li key={each.id}>\n                        <Link to={`/movies/${each.id}`} key={each.id}>\n                          <img\n                            src={each.posterPath}\n                            alt={each.title}\n                            className=\"logo-image\"\n                          />\n                        </Link>\n                      </li>\n                    </div>\n                  ))}\n                </Slider>\n              </ul>\n            )\n          }\n\n          const renderMovieItem = () => {\n            this.getOriginalVideos()\n          }\n\n          const renderFailureView = () => (\n            <div className=\"failure-view-container\">\n              <img\n                alt=\"failure view\"\n                src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650297174/Mini%20Project%20Netflix%20Clone/Background-Complete_t8c6zl.png\"\n                className=\"failure-image\"\n              />\n              <p className=\"search-content\">\n                Something went wrong. Please try again\n              </p>\n\n              <button\n                type=\"button\"\n                className=\"try-again-button\"\n                onClick={renderMovieItem}\n              >\n                Try again\n              </button>\n            </div>\n          )\n\n          const getResult = () => {\n            const {apiStatus} = this.state\n            switch (apiStatus) {\n              case apiConstants.success:\n                return renderSuccessView()\n              case apiConstants.failure:\n                return renderFailureView()\n              case apiConstants.inProgress:\n                return renderLoader()\n              default:\n                return null\n            }\n          }\n\n          return <div testid=\"originals\">{getResult()}</div>\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default Originals\n","import {Component} from 'react'\n\nimport Slider from 'react-slick'\nimport {Link} from 'react-router-dom'\n\nimport Cookies from 'js-cookie'\nimport LoadingView from '../LoadingView'\n\nimport MovieContext from '../../context/MovieContext'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass TopRated extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    allTopRatedItemVideos: [],\n  }\n\n  componentDidMount() {\n    this.getTopRatedItemVideos()\n  }\n\n  getTopRatedItemVideos = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n\n    const url = 'https://apis.ccbp.in/movies-app/top-rated-movies'\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n\n      const updatedVideosList = data.results.map(each => ({\n        id: each.id,\n        backdropPath: each.backdrop_path,\n        overview: each.overview,\n        posterPath: each.poster_path,\n        title: each.title,\n      }))\n\n      this.setState({\n        apiStatus: apiConstants.success,\n        allTopRatedItemVideos: updatedVideosList,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from originals', {username})\n\n          const renderLoader = () => <LoadingView />\n\n          const renderSuccessView = () => {\n            const {allTopRatedItemVideos} = this.state\n\n            const settings = {\n              dots: false,\n              infinite: false,\n              speed: 500,\n              slidesToShow: 4,\n              slidesToScroll: 1,\n              responsive: [\n                {\n                  breakpoint: 1024,\n                  settings: {\n                    slidesToShow: 4,\n                    slidesToScroll: 1,\n                  },\n                },\n                {\n                  breakpoint: 600,\n                  settings: {\n                    slidesToShow: 3,\n                    slidesToScroll: 1,\n                  },\n                },\n                {\n                  breakpoint: 480,\n                  settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 1,\n                  },\n                },\n              ],\n            }\n\n            return (\n              <ul>\n                <Slider {...settings} className=\"slick-container\">\n                  {allTopRatedItemVideos.map(each => (\n                    <div className=\"slick-item\" key={each.id}>\n                      <li key={each.id}>\n                        <Link to={`/movies/${each.id}`}>\n                          <img\n                            src={each.posterPath}\n                            alt={each.title}\n                            className=\"logo-image\"\n                          />\n                        </Link>\n                      </li>\n                    </div>\n                  ))}\n                </Slider>\n              </ul>\n            )\n          }\n\n          const renderMovieItem = () => {\n            this.getTopRatedItemVideos()\n          }\n\n          const renderFailureView = () => (\n            <div className=\"failure-view-container\">\n              <img\n                alt=\"failure view\"\n                src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650297174/Mini%20Project%20Netflix%20Clone/Background-Complete_t8c6zl.png\"\n                className=\"failure-image\"\n              />\n              <p className=\"search-content\">\n                Something went wrong. Please try again\n              </p>\n\n              <button\n                type=\"button\"\n                className=\"try-again-button\"\n                onClick={renderMovieItem}\n              >\n                Try again\n              </button>\n            </div>\n          )\n\n          const getResult = () => {\n            const {apiStatus} = this.state\n            switch (apiStatus) {\n              case apiConstants.success:\n                return renderSuccessView()\n              case apiConstants.failure:\n                return renderFailureView()\n              case apiConstants.inProgress:\n                return renderLoader()\n              default:\n                return null\n            }\n          }\n\n          return <div testid=\"toprated\">{getResult()}</div>\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default TopRated\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Header from '../Header'\nimport TrendingNow from '../TrendingNow'\n\nimport './index.css'\nimport MovieContext from '../../context/MovieContext'\nimport Footer from '../Footer'\nimport LoadingView from '../LoadingView'\nimport Originals from '../Originals'\nimport TopRated from '../TopRated'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass Home extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    allTrendingVideos: [],\n  }\n\n  componentDidMount() {\n    this.getAllVideos()\n  }\n\n  getAllVideos = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n\n    const url = 'https://apis.ccbp.in/movies-app/originals'\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n\n      const updatedVideosList = data.results.map(each => ({\n        id: each.id,\n        backdropPath: each.backdrop_path,\n        overview: each.overview,\n        posterPath: each.poster_path,\n        title: each.title,\n      }))\n\n      this.setState({\n        apiStatus: apiConstants.success,\n        allTrendingVideos: updatedVideosList,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  render() {\n    const renderSuccessView = () => {\n      const {allTrendingVideos} = this.state\n\n      const homeHeaderItem =\n        allTrendingVideos[Math.floor(Math.random() * allTrendingVideos.length)]\n\n      const backgroundImage = homeHeaderItem.backdropPath\n      const titleOfHeader = homeHeaderItem.title\n      const overviewOfHeader = homeHeaderItem.overview\n\n      return (\n        <div\n          className=\"spiderman-container\"\n          style={{\n            backgroundImage: `url(${backgroundImage})`,\n            backgroundSize: '100% 100%',\n            backgroundRepeat: 'no-repeat',\n          }}\n        >\n          <Header />\n          <div className=\"home-header-content\">\n            <h1 className=\"movie-details-name\">{titleOfHeader}</h1>\n            <p className=\"movie-details-description\">{overviewOfHeader}</p>\n            <button type=\"button\" className=\"movies-details-play-button\">\n              Play\n            </button>\n          </div>\n        </div>\n      )\n    }\n\n    const renderMovieItem = () => {\n      this.getAllVideos()\n    }\n\n    const renderLoader = () => <LoadingView />\n\n    const renderFailureView = () => (\n      <div className=\"failure-view-container\">\n        <img\n          alt=\"failure view\"\n          src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650297174/Mini%20Project%20Netflix%20Clone/Background-Complete_t8c6zl.png\"\n          className=\"failure-image\"\n        />\n        <p className=\"search-content\">Something went wrong. Please try again</p>\n\n        <button\n          type=\"button\"\n          className=\"try-again-button\"\n          onClick={renderMovieItem}\n        >\n          Try again\n        </button>\n      </div>\n    )\n\n    const getResult = () => {\n      const {apiStatus} = this.state\n      switch (apiStatus) {\n        case apiConstants.success:\n          return renderSuccessView()\n        case apiConstants.failure:\n          return renderFailureView()\n        case apiConstants.inProgress:\n          return renderLoader()\n        default:\n          return null\n      }\n    }\n\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from Home', {username})\n\n          return (\n            <>\n              <div className=\"home-container\" testid=\"home\">\n                {getResult()}\n                <h1 className=\"trending-heading\">Trending Now</h1>\n                <TrendingNow />\n                <h1 className=\"trending-heading\">Top Rated</h1>\n                <TopRated />\n                <h1 className=\"trending-heading\">Originals</h1>\n                <Originals />\n              </div>\n              <Footer />\n            </>\n          )\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default Home\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\n\nimport MovieContext from '../../context/MovieContext'\nimport './index.css'\n\nclass Login extends Component {\n  state = {\n    showSubmitError: false,\n    errorMsg: '',\n  }\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {\n            username,\n            password,\n            triggerChangeUsername,\n            triggerChangePassword,\n          } = value\n\n          const onChangeUsername = event => {\n            triggerChangeUsername(event)\n          }\n\n          const onChangePassword = event => {\n            triggerChangePassword(event)\n          }\n\n          const onSubmitSuccess = jwtToken => {\n            const {history} = this.props\n\n            Cookies.set('jwt_token', jwtToken, {\n              expires: 30,\n            })\n            history.replace('/')\n          }\n\n          const onSubmitFailure = errorMsg => {\n            this.setState({showSubmitError: true, errorMsg})\n          }\n\n          const submitNetflixForm = async event => {\n            event.preventDefault()\n\n            const userDetails = {username, password}\n            const url = 'https://apis.ccbp.in/login'\n            const options = {\n              method: 'POST',\n              body: JSON.stringify(userDetails),\n            }\n            const response = await fetch(url, options)\n            const data = await response.json()\n            if (response.ok === true) {\n              onSubmitSuccess(data.jwt_token)\n            } else {\n              onSubmitFailure(data.error_msg)\n            }\n          }\n\n          const renderPasswordField = () => (\n            <>\n              <label className=\"input-label\" htmlFor=\"password\">\n                PASSWORD\n              </label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                className=\"password-input-field\"\n                value={password}\n                onChange={onChangePassword}\n                placeholder=\"Password\"\n              />\n            </>\n          )\n\n          const renderUsernameField = () => (\n            <>\n              <label className=\"input-label\" htmlFor=\"username\">\n                USERNAME\n              </label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                className=\"username-input-field\"\n                value={username}\n                onChange={onChangeUsername}\n                placeholder=\"Username\"\n              />\n            </>\n          )\n\n          const {showSubmitError, errorMsg} = this.state\n\n          const jwtToken = Cookies.get('jwt_token')\n\n          if (jwtToken !== undefined) {\n            return <Redirect to=\"/\" />\n          }\n\n          return (\n            <div className=\"login-form-container\">\n              <div className=\"img-logo-container\">\n                <img\n                  src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650191862/Mini%20Project%20Netflix%20Clone/MoviesIcon_snclt2.png\"\n                  alt=\"login website logo\"\n                />\n              </div>\n\n              <form className=\"form-container\" onSubmit={submitNetflixForm}>\n                <h1 className=\"login-heading\">Login</h1>\n                <div className=\"input-container\">{renderUsernameField()}</div>\n                <div className=\"input-container\">{renderPasswordField()}</div>\n                {showSubmitError && (\n                  <p className=\"error-message\">*{errorMsg}</p>\n                )}\n                <button type=\"submit\" className=\"login-button\">\n                  Login\n                </button>\n              </form>\n            </div>\n          )\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\n\nexport default Login\n","import MovieContext from '../../context/MovieContext'\nimport Header from '../Header'\nimport Footer from '../Footer'\n\nimport './index.css'\n\nconst Account = props => (\n  <MovieContext.Consumer>\n    {value => {\n      const {username, password, triggerLogout} = value\n\n      const onClickLogout = () => {\n        triggerLogout(props)\n      }\n\n      const hiddenPassword = '*'.repeat(password.length)\n\n      return (\n        <>\n          <div className=\"account-container\" testid=\"account\">\n            <Header />\n            <div className=\"account-container-2\">\n              <h1>\n                Account\n                <hr />\n              </h1>\n\n              <div className=\"account-element\">\n                <p className=\"header-element\">Member ship</p>\n                <div>\n                  <p>{username}@gmail.com</p>\n                  <p>Password: {hiddenPassword} </p>\n                </div>\n              </div>\n              <hr />\n\n              <div className=\"account-element\">\n                <p className=\"header-element\">Plan Details</p>\n                <div>\n                  <p>Premium</p>\n                  <p className=\"ultra-hd\">Ultra HD</p>\n                </div>\n              </div>\n              <button\n                type=\"button\"\n                className=\"logout-button\"\n                onClick={onClickLogout}\n              >\n                Logout\n              </button>\n            </div>\n\n            <Footer />\n          </div>\n        </>\n      )\n    }}\n  </MovieContext.Consumer>\n)\nexport default Account\n","import {Component} from 'react'\n\nimport {Link} from 'react-router-dom'\n\nimport Cookies from 'js-cookie'\nimport LoadingView from '../LoadingView'\n\nimport MovieContext from '../../context/MovieContext'\nimport './index.css'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass PopularMovies extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    allPopularVideos: [],\n  }\n\n  componentDidMount() {\n    this.getPopularItemVideos()\n  }\n\n  getPopularItemVideos = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n\n    const url = 'https://apis.ccbp.in/movies-app/popular-movies'\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n\n      const updatedVideosList = data.results.map(each => ({\n        id: each.id,\n        backdropPath: each.backdrop_path,\n        overview: each.overView,\n        posterPath: each.poster_path,\n        title: each.title,\n      }))\n\n      this.setState({\n        apiStatus: apiConstants.success,\n        allPopularVideos: updatedVideosList,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from popular', {username})\n\n          const renderLoader = () => <LoadingView />\n\n          const renderSuccessView = () => {\n            const {allPopularVideos} = this.state\n\n            return (\n              <div className=\"popular-video-list-container\">\n                <ul className=\"popular-video-list\">\n                  {allPopularVideos.map(each => (\n                    <li key={each.id}>\n                      <Link to={`/movies/${each.id}`} key={each.id}>\n                        <img\n                          src={each.posterPath}\n                          alt={each.title}\n                          className=\"popular-image\"\n                        />\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )\n          }\n\n          const renderMovieItem = () => {\n            this.getPopularItemVideos()\n          }\n\n          const renderFailureView = () => (\n            <div className=\"failure-view-container\">\n              <img\n                alt=\"failure view\"\n                src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650297174/Mini%20Project%20Netflix%20Clone/Background-Complete_t8c6zl.png\"\n                className=\"failure-image\"\n              />\n              <p className=\"search-content\">\n                Something went wrong. Please try again\n              </p>\n\n              <button\n                type=\"button\"\n                onClick={renderMovieItem}\n                className=\"try-again-button\"\n              >\n                Try again\n              </button>\n            </div>\n          )\n\n          const getResult = () => {\n            const {apiStatus} = this.state\n            switch (apiStatus) {\n              case apiConstants.success:\n                return renderSuccessView()\n              case apiConstants.failure:\n                return renderFailureView()\n              case apiConstants.inProgress:\n                return renderLoader()\n              default:\n                return null\n            }\n          }\n\n          return <div testid=\"trending\">{getResult()}</div>\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default PopularMovies\n","import {Component} from 'react'\nimport Header from '../Header'\n\nimport MovieContext from '../../context/MovieContext'\nimport Footer from '../Footer'\n// import LoadingElement from '../LoaderElement'\nimport PopularMovies from '../PopularMovies'\n\nclass Popular extends Component {\n  //   state = {searchInput: ''}\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from Home', {username})\n\n          return (\n            <>\n              <div className=\"home-container\" testid=\"popular\">\n                <Header />\n                <PopularMovies />\n                <Footer />\n              </div>\n            </>\n          )\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default Popular\n","import {Component} from 'react'\n\nimport {Link, withRouter} from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport LoadingView from '../LoadingView'\n\nimport MovieContext from '../../context/MovieContext'\n\nimport './index.css'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass MovieItem extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    movieItemDetails: [],\n    similarMovieItems: [],\n  }\n\n  componentDidMount() {\n    this.getMovieItemDetails()\n  }\n\n  getFormattedData = each => ({\n    id: each.id,\n    backdropPath: each.backdrop_path,\n    title: each.title,\n    adult: each.adult,\n    budget: each.budget,\n    genres: each.genres,\n    overview: each.overview,\n    posterPath: each.poster_path,\n    releaseDate: each.release_date,\n    runtime: each.runtime,\n    rating: each.vote_average,\n    count: each.vote_count,\n    similarMovieItems: each.similar_movies,\n    spokenLanguage: each.spoken_languages,\n  })\n\n  getMovieItemDetails = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    const url = `https://apis.ccbp.in/movies-app/movies/${id}`\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n\n      const updatedVideosList = this.getFormattedData(data.movie_details)\n\n      this.setState({\n        apiStatus: apiConstants.success,\n        movieItemDetails: updatedVideosList,\n        similarMovieItems: updatedVideosList.similarMovieItems.slice(0, 6),\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  changeNewMovieDetails = () => {\n    this.getMovieItemDetails()\n  }\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from trending', {username})\n\n          const renderLoader = () => <LoadingView />\n\n          const renderMovieItem = () => {\n            this.getMovieItemDetails()\n          }\n\n          const renderSuccessView = () => {\n            const {movieItemDetails, similarMovieItems} = this.state\n            const {\n              title,\n              backdropPath,\n              runtime,\n              adult,\n              releaseDate,\n              overview,\n              genres,\n              count,\n              rating,\n              budget,\n              spokenLanguage,\n            } = movieItemDetails\n            const backgroundImage = backdropPath\n            const hoursString = Math.floor(runtime / 60)\n            const minutesString = runtime % 60\n            const dateString = new Date(releaseDate)\n            let dateEnd\n            const day = dateString.getDay().toString()\n            if (day.endsWith('3')) {\n              dateEnd = 'rd'\n            } else if (day.endsWith('2')) {\n              dateEnd = 'nd'\n            } else if (day.endsWith('1')) {\n              dateEnd = 'st'\n            } else {\n              dateEnd = 'th'\n            }\n            return (\n              <div className=\"home-background\" testid=\"movieItem\">\n                <div\n                  style={{\n                    backgroundImage: `url(${backgroundImage})`,\n                    backgroundSize: '100% 100%',\n                    backgroundRepeat: 'no-repeat',\n                  }}\n                  className=\"movies-details-top-container\"\n                >\n                  <h1 className=\"movies-details-top-container-heading\">\n                    {title}\n                  </h1>\n                  <div className=\"hours-container\">\n                    <p className=\"hours\">{`${hoursString}h ${minutesString}m`}</p>\n                    <p className=\"language\">{adult ? 'A' : 'U/A'}</p>\n                    <p className=\"hours\">{dateString.getFullYear()}</p>\n                  </div>\n                  <p className=\"overview\">{overview}</p>\n                  <button type=\"button\" className=\"button\">\n                    Play\n                  </button>\n                </div>\n                <div className=\"genre-container\">\n                  <ul>\n                    <h1 className=\"genre-heading\">Genres</h1>\n                    {genres.map(each => (\n                      <li className=\"genre-option\" key={each.id}>\n                        <p>{each.name}</p>\n                      </li>\n                    ))}\n                  </ul>\n                  <ul>\n                    <h1 className=\"genre-heading\">Audio Available</h1>\n                    {spokenLanguage.map(each => (\n                      <li className=\"genre-option\" key={each.id}>\n                        <p>{each.english_name}</p>\n                      </li>\n                    ))}\n                  </ul>\n                  <ul>\n                    <h1 className=\"genre-heading\">Rating Count</h1>\n                    <li className=\"genre-option\">\n                      <p>{count}</p>\n                    </li>\n                    <h1 className=\"genre-heading\">Rating Average</h1>\n                    <li className=\"genre-option\">\n                      <p>{rating}</p>\n                    </li>\n                  </ul>\n                  <ul>\n                    <h1 className=\"genre-heading\">Budget</h1>\n                    <li className=\"genre-option\">\n                      <p>{budget} crores</p>\n                    </li>\n                    <h1 className=\"genre-heading\">Release Date</h1>\n                    <li className=\"genre-option\">\n                      <p>{`${day}${dateEnd} ${dateString.toLocaleString(\n                        'default',\n                        {\n                          month: 'long',\n                        },\n                      )} ${dateString.getFullYear()}`}</p>\n                    </li>\n                  </ul>\n                </div>\n                <h1 className=\"similar-heading\">More like this</h1>\n                <ul className=\"similar-movies-container\">\n                  {similarMovieItems.map(each => (\n                    <li key={each.id} className=\"link\">\n                      <Link to={`/movies/${each.id}`} target=\"blank\">\n                        <img\n                          src={each.poster_path}\n                          alt={each.title}\n                          className=\"similar-movie-image\"\n                          onClick={this.changeNewMovieDetails}\n                        />\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )\n          }\n\n          const renderFailureView = () => (\n            <div className=\"failure-view-container\">\n              <img\n                alt=\"failure view\"\n                src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650297174/Mini%20Project%20Netflix%20Clone/Background-Complete_t8c6zl.png\"\n              />\n              <p className=\"search-content\">\n                Something went wrong. Please try again\n              </p>\n\n              <button\n                className=\"try-again-button\"\n                type=\"button\"\n                onClick={renderMovieItem}\n              >\n                Try again\n              </button>\n            </div>\n          )\n\n          const getResult = () => {\n            const {apiStatus} = this.state\n            switch (apiStatus) {\n              case apiConstants.success:\n                return renderSuccessView()\n              case apiConstants.failure:\n                return renderFailureView()\n              case apiConstants.inProgress:\n                return renderLoader()\n              default:\n                return null\n            }\n          }\n\n          return <div testid=\"movieItem\">{getResult()}</div>\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default withRouter(MovieItem)\n","import {Component} from 'react'\nimport Header from '../Header'\n\nimport MovieContext from '../../context/MovieContext'\nimport Footer from '../Footer'\n\nimport MovieItem from '../MovieItem'\n\nclass MovieItemDetails extends Component {\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from movieItemDetails', {username})\n\n          return (\n            <>\n              <div className=\"home-container\">\n                <Header />\n                <MovieItem />\n              </div>\n              <Footer />\n            </>\n          )\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default MovieItemDetails\n","import {Component} from 'react'\n\nimport {Link} from 'react-router-dom'\nimport {HiOutlineSearch} from 'react-icons/hi'\n\nimport Cookies from 'js-cookie'\nimport LoadingView from '../LoadingView'\n\nimport MovieContext from '../../context/MovieContext'\nimport './index.css'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass SearchItems extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    allSearchResults: [],\n    searchInput: '',\n  }\n\n  componentDidMount() {\n    this.getSearchElementVideos()\n  }\n\n  getSearchElementVideos = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n    const {searchInput} = this.state\n\n    const url = `https://apis.ccbp.in/movies-app/movies-search?search=${searchInput}`\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n\n      const updatedVideosList = data.results.map(each => ({\n        id: each.id,\n        backdropPath: each.backdrop_path,\n        overview: each.overview,\n        posterPath: each.poster_path,\n        title: each.title,\n      }))\n\n      this.setState({\n        apiStatus: apiConstants.success,\n        allSearchResults: updatedVideosList,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  changeSearchInput = event => {\n    this.setState({searchInput: event.target.value})\n  }\n\n  onClickInput = event => {\n    if (event.key === 'Enter') {\n      this.getSearchElementVideos()\n    }\n  }\n\n  render() {\n    const {searchInput} = this.state\n\n    const searchElements = () => {\n      this.getSearchElementVideos()\n    }\n\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from popular', {username})\n\n          const renderLoader = () => <LoadingView />\n\n          const renderSuccessView = () => {\n            const {allSearchResults} = this.state\n            const showSearchResults = allSearchResults.length > 0\n\n            return showSearchResults ? (\n              <div className=\"popular-video-list-container\">\n                <ul className=\"popular-video-list\">\n                  {allSearchResults.map(each => (\n                    <li key={each.id}>\n                      <Link to={`/movies/${each.id}`} key={each.id}>\n                        <img\n                          src={each.posterPath}\n                          alt={each.title}\n                          className=\"popular-image\"\n                        />\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ) : (\n              <div className=\"failure-view-container\">\n                <img\n                  src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650384280/Mini%20Project%20Netflix%20Clone/no_results_tjfgmd.png\"\n                  alt=\"no movies\"\n                  className=\"failure-image\"\n                />\n                <p className=\"search-content\">\n                  Your search for {searchInput} did not find any matches.\n                </p>\n              </div>\n            )\n          }\n\n          const renderMovieItem = () => {\n            this.getSearchElementVideos()\n          }\n\n          const renderFailureView = () => (\n            <div className=\"failure-view-container\">\n              <img\n                alt=\"failure view\"\n                src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650297174/Mini%20Project%20Netflix%20Clone/Background-Complete_t8c6zl.png\"\n                className=\"failure-image\"\n              />\n              <p className=\"search-content\">\n                Something went wrong. Please try again\n              </p>\n              <button\n                type=\"button\"\n                className=\"try-again-button\"\n                onClick={renderMovieItem}\n              >\n                Try again\n              </button>\n            </div>\n          )\n\n          const getResult = () => {\n            const {apiStatus} = this.state\n            switch (apiStatus) {\n              case apiConstants.success:\n                return renderSuccessView()\n              case apiConstants.failure:\n                return renderFailureView()\n              case apiConstants.inProgress:\n                return renderLoader()\n              default:\n                return null\n            }\n          }\n\n          return (\n            <div testid=\"searchItem\" className=\"search-element\">\n              <div className=\"input-element-container\">\n                <input\n                  type=\"search\"\n                  value={searchInput}\n                  onChange={this.changeSearchInput}\n                  placeholder=\"Search\"\n                  onKeyDown={this.onClickInput}\n                  className=\"input-element\"\n                />\n                <button\n                  type=\"button\"\n                  testid=\"searchButton\"\n                  className=\"search-button\"\n                  onClick={searchElements}\n                >\n                  <HiOutlineSearch size={25} color=\"white\" />\n                </button>\n              </div>\n              {getResult()}\n            </div>\n          )\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default SearchItems\n","import {Component} from 'react'\nimport Header from '../Header'\n\nimport MovieContext from '../../context/MovieContext'\nimport Footer from '../Footer'\n\nimport SearchItems from '../SearchItems'\nimport './index.css'\n\nclass Search extends Component {\n  //   state = {searchInput: ''}\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from Home', {username})\n\n          return (\n            <div className=\"search-main-container\" testid=\"searchRoute\">\n              <Header />\n              <div className=\"search-container\">\n                <SearchItems />\n              </div>\n              <Footer />\n            </div>\n          )\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default Search\n","import Cookies from 'js-cookie'\nimport {Route, Redirect} from 'react-router-dom'\n\nconst ProtectedRoute = props => {\n  const jwtToken = Cookies.get('jwt_token')\n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\nexport default ProtectedRoute\n","import {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst NotFound = () => (\n  <div className=\"failureContainer\" testid=\"not found\">\n    <h1>Lost Your way</h1>\n    <p>\n      we are sorry, the page you requested could not be found Please go back to\n      the homepage.\n    </p>\n    <Link to=\"/\">\n      <button type=\"button\">Go to Home</button>\n    </Link>\n  </div>\n)\nexport default NotFound\n","import {Component} from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nimport Cookies from 'js-cookie'\n\nimport './App.css'\nimport Home from './components/Home'\nimport Login from './components/Login'\nimport Account from './components/Account'\nimport Popular from './components/Popular'\nimport MovieItemDetails from './components/MovieItemDetails'\nimport Search from './components/Search'\n\nimport MovieContext from './context/MovieContext'\n\nimport ProtectedRoute from './components/ProtectedRoute'\nimport NotFound from './components/NotFound'\n\nclass App extends Component {\n  state = {username: '', password: ''}\n\n  triggerChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  triggerChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  triggerLogout = props => {\n    const {history} = props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n    this.setState({username: '', password: ''})\n  }\n\n  render() {\n    const {username, password} = this.state\n\n    return (\n      <MovieContext.Provider\n        value={{\n          username,\n          password,\n          triggerChangeUsername: this.triggerChangeUsername,\n          triggerChangePassword: this.triggerChangePassword,\n          triggerLogout: this.triggerLogout,\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <ProtectedRoute exact path=\"/\" component={Home} />\n          <ProtectedRoute exact path=\"/account\" component={Account} />\n          <ProtectedRoute exact path=\"/popular\" component={Popular} />\n          <ProtectedRoute exact path=\"/search\" component={Search} />\n          <ProtectedRoute\n            exact\n            path=\"/movies/:id\"\n            component={MovieItemDetails}\n          />\n\n          <Route exact path=\"/not-found\" component={NotFound} />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </MovieContext.Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {HashRouter as Router} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}